// Code generated by ent, DO NOT EDIT.
// --------------------------------------------------------------------
// SPDX-FileCopyrightText: Copyright Â© 2025 The DependencyTrack Authors
// SPDX-FileType: SOURCE
// SPDX-License-Identifier: Apache-2.0
// --------------------------------------------------------------------
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// --------------------------------------------------------------------

package ent

import (
	"dependencytrack.io/hyades/ent/mappedldapgroup"
	"dependencytrack.io/hyades/ent/mappedoidcgroup"
	"dependencytrack.io/hyades/ent/oidcgroup"
	"dependencytrack.io/hyades/ent/schema"
	"dependencytrack.io/hyades/ent/team"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	mappedldapgroupMixin := schema.MappedLDAPGroup{}.Mixin()
	mappedldapgroupMixinFields0 := mappedldapgroupMixin[0].Fields()
	_ = mappedldapgroupMixinFields0
	mappedldapgroupFields := schema.MappedLDAPGroup{}.Fields()
	_ = mappedldapgroupFields
	// mappedldapgroupDescUUID is the schema descriptor for uuid field.
	mappedldapgroupDescUUID := mappedldapgroupMixinFields0[0].Descriptor()
	// mappedldapgroup.DefaultUUID holds the default value on creation for the uuid field.
	mappedldapgroup.DefaultUUID = mappedldapgroupDescUUID.Default.(func() uuid.UUID)
	mappedoidcgroupMixin := schema.MappedOIDCGroup{}.Mixin()
	mappedoidcgroupMixinFields0 := mappedoidcgroupMixin[0].Fields()
	_ = mappedoidcgroupMixinFields0
	mappedoidcgroupFields := schema.MappedOIDCGroup{}.Fields()
	_ = mappedoidcgroupFields
	// mappedoidcgroupDescUUID is the schema descriptor for uuid field.
	mappedoidcgroupDescUUID := mappedoidcgroupMixinFields0[0].Descriptor()
	// mappedoidcgroup.DefaultUUID holds the default value on creation for the uuid field.
	mappedoidcgroup.DefaultUUID = mappedoidcgroupDescUUID.Default.(func() uuid.UUID)
	oidcgroupMixin := schema.OIDCGroup{}.Mixin()
	oidcgroupMixinFields0 := oidcgroupMixin[0].Fields()
	_ = oidcgroupMixinFields0
	oidcgroupFields := schema.OIDCGroup{}.Fields()
	_ = oidcgroupFields
	// oidcgroupDescUUID is the schema descriptor for uuid field.
	oidcgroupDescUUID := oidcgroupMixinFields0[0].Descriptor()
	// oidcgroup.DefaultUUID holds the default value on creation for the uuid field.
	oidcgroup.DefaultUUID = oidcgroupDescUUID.Default.(func() uuid.UUID)
	teamMixin := schema.Team{}.Mixin()
	teamMixinFields0 := teamMixin[0].Fields()
	_ = teamMixinFields0
	teamFields := schema.Team{}.Fields()
	_ = teamFields
	// teamDescUUID is the schema descriptor for uuid field.
	teamDescUUID := teamMixinFields0[0].Descriptor()
	// team.DefaultUUID holds the default value on creation for the uuid field.
	team.DefaultUUID = teamDescUUID.Default.(func() uuid.UUID)
}
