// Code generated by ent, DO NOT EDIT.
// --------------------------------------------------------------------
// SPDX-FileCopyrightText: Copyright Â© 2025 The DependencyTrack Authors
// SPDX-FileType: SOURCE
// SPDX-License-Identifier: Apache-2.0
// --------------------------------------------------------------------
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// --------------------------------------------------------------------

package configproperty

import (
	"dependencytrack.io/hyades/ent/predicate"
	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldLTE(FieldID, id))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldEQ(FieldDescription, v))
}

// Groupname applies equality check predicate on the "groupname" field. It's identical to GroupnameEQ.
func Groupname(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldEQ(FieldGroupname, v))
}

// Propertyname applies equality check predicate on the "propertyname" field. It's identical to PropertynameEQ.
func Propertyname(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldEQ(FieldPropertyname, v))
}

// Propertytype applies equality check predicate on the "propertytype" field. It's identical to PropertytypeEQ.
func Propertytype(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldEQ(FieldPropertytype, v))
}

// Propertyvalue applies equality check predicate on the "propertyvalue" field. It's identical to PropertyvalueEQ.
func Propertyvalue(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldEQ(FieldPropertyvalue, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldContainsFold(FieldDescription, v))
}

// GroupnameEQ applies the EQ predicate on the "groupname" field.
func GroupnameEQ(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldEQ(FieldGroupname, v))
}

// GroupnameNEQ applies the NEQ predicate on the "groupname" field.
func GroupnameNEQ(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldNEQ(FieldGroupname, v))
}

// GroupnameIn applies the In predicate on the "groupname" field.
func GroupnameIn(vs ...string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldIn(FieldGroupname, vs...))
}

// GroupnameNotIn applies the NotIn predicate on the "groupname" field.
func GroupnameNotIn(vs ...string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldNotIn(FieldGroupname, vs...))
}

// GroupnameGT applies the GT predicate on the "groupname" field.
func GroupnameGT(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldGT(FieldGroupname, v))
}

// GroupnameGTE applies the GTE predicate on the "groupname" field.
func GroupnameGTE(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldGTE(FieldGroupname, v))
}

// GroupnameLT applies the LT predicate on the "groupname" field.
func GroupnameLT(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldLT(FieldGroupname, v))
}

// GroupnameLTE applies the LTE predicate on the "groupname" field.
func GroupnameLTE(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldLTE(FieldGroupname, v))
}

// GroupnameContains applies the Contains predicate on the "groupname" field.
func GroupnameContains(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldContains(FieldGroupname, v))
}

// GroupnameHasPrefix applies the HasPrefix predicate on the "groupname" field.
func GroupnameHasPrefix(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldHasPrefix(FieldGroupname, v))
}

// GroupnameHasSuffix applies the HasSuffix predicate on the "groupname" field.
func GroupnameHasSuffix(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldHasSuffix(FieldGroupname, v))
}

// GroupnameEqualFold applies the EqualFold predicate on the "groupname" field.
func GroupnameEqualFold(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldEqualFold(FieldGroupname, v))
}

// GroupnameContainsFold applies the ContainsFold predicate on the "groupname" field.
func GroupnameContainsFold(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldContainsFold(FieldGroupname, v))
}

// PropertynameEQ applies the EQ predicate on the "propertyname" field.
func PropertynameEQ(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldEQ(FieldPropertyname, v))
}

// PropertynameNEQ applies the NEQ predicate on the "propertyname" field.
func PropertynameNEQ(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldNEQ(FieldPropertyname, v))
}

// PropertynameIn applies the In predicate on the "propertyname" field.
func PropertynameIn(vs ...string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldIn(FieldPropertyname, vs...))
}

// PropertynameNotIn applies the NotIn predicate on the "propertyname" field.
func PropertynameNotIn(vs ...string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldNotIn(FieldPropertyname, vs...))
}

// PropertynameGT applies the GT predicate on the "propertyname" field.
func PropertynameGT(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldGT(FieldPropertyname, v))
}

// PropertynameGTE applies the GTE predicate on the "propertyname" field.
func PropertynameGTE(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldGTE(FieldPropertyname, v))
}

// PropertynameLT applies the LT predicate on the "propertyname" field.
func PropertynameLT(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldLT(FieldPropertyname, v))
}

// PropertynameLTE applies the LTE predicate on the "propertyname" field.
func PropertynameLTE(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldLTE(FieldPropertyname, v))
}

// PropertynameContains applies the Contains predicate on the "propertyname" field.
func PropertynameContains(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldContains(FieldPropertyname, v))
}

// PropertynameHasPrefix applies the HasPrefix predicate on the "propertyname" field.
func PropertynameHasPrefix(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldHasPrefix(FieldPropertyname, v))
}

// PropertynameHasSuffix applies the HasSuffix predicate on the "propertyname" field.
func PropertynameHasSuffix(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldHasSuffix(FieldPropertyname, v))
}

// PropertynameEqualFold applies the EqualFold predicate on the "propertyname" field.
func PropertynameEqualFold(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldEqualFold(FieldPropertyname, v))
}

// PropertynameContainsFold applies the ContainsFold predicate on the "propertyname" field.
func PropertynameContainsFold(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldContainsFold(FieldPropertyname, v))
}

// PropertytypeEQ applies the EQ predicate on the "propertytype" field.
func PropertytypeEQ(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldEQ(FieldPropertytype, v))
}

// PropertytypeNEQ applies the NEQ predicate on the "propertytype" field.
func PropertytypeNEQ(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldNEQ(FieldPropertytype, v))
}

// PropertytypeIn applies the In predicate on the "propertytype" field.
func PropertytypeIn(vs ...string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldIn(FieldPropertytype, vs...))
}

// PropertytypeNotIn applies the NotIn predicate on the "propertytype" field.
func PropertytypeNotIn(vs ...string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldNotIn(FieldPropertytype, vs...))
}

// PropertytypeGT applies the GT predicate on the "propertytype" field.
func PropertytypeGT(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldGT(FieldPropertytype, v))
}

// PropertytypeGTE applies the GTE predicate on the "propertytype" field.
func PropertytypeGTE(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldGTE(FieldPropertytype, v))
}

// PropertytypeLT applies the LT predicate on the "propertytype" field.
func PropertytypeLT(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldLT(FieldPropertytype, v))
}

// PropertytypeLTE applies the LTE predicate on the "propertytype" field.
func PropertytypeLTE(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldLTE(FieldPropertytype, v))
}

// PropertytypeContains applies the Contains predicate on the "propertytype" field.
func PropertytypeContains(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldContains(FieldPropertytype, v))
}

// PropertytypeHasPrefix applies the HasPrefix predicate on the "propertytype" field.
func PropertytypeHasPrefix(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldHasPrefix(FieldPropertytype, v))
}

// PropertytypeHasSuffix applies the HasSuffix predicate on the "propertytype" field.
func PropertytypeHasSuffix(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldHasSuffix(FieldPropertytype, v))
}

// PropertytypeEqualFold applies the EqualFold predicate on the "propertytype" field.
func PropertytypeEqualFold(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldEqualFold(FieldPropertytype, v))
}

// PropertytypeContainsFold applies the ContainsFold predicate on the "propertytype" field.
func PropertytypeContainsFold(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldContainsFold(FieldPropertytype, v))
}

// PropertyvalueEQ applies the EQ predicate on the "propertyvalue" field.
func PropertyvalueEQ(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldEQ(FieldPropertyvalue, v))
}

// PropertyvalueNEQ applies the NEQ predicate on the "propertyvalue" field.
func PropertyvalueNEQ(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldNEQ(FieldPropertyvalue, v))
}

// PropertyvalueIn applies the In predicate on the "propertyvalue" field.
func PropertyvalueIn(vs ...string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldIn(FieldPropertyvalue, vs...))
}

// PropertyvalueNotIn applies the NotIn predicate on the "propertyvalue" field.
func PropertyvalueNotIn(vs ...string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldNotIn(FieldPropertyvalue, vs...))
}

// PropertyvalueGT applies the GT predicate on the "propertyvalue" field.
func PropertyvalueGT(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldGT(FieldPropertyvalue, v))
}

// PropertyvalueGTE applies the GTE predicate on the "propertyvalue" field.
func PropertyvalueGTE(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldGTE(FieldPropertyvalue, v))
}

// PropertyvalueLT applies the LT predicate on the "propertyvalue" field.
func PropertyvalueLT(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldLT(FieldPropertyvalue, v))
}

// PropertyvalueLTE applies the LTE predicate on the "propertyvalue" field.
func PropertyvalueLTE(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldLTE(FieldPropertyvalue, v))
}

// PropertyvalueContains applies the Contains predicate on the "propertyvalue" field.
func PropertyvalueContains(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldContains(FieldPropertyvalue, v))
}

// PropertyvalueHasPrefix applies the HasPrefix predicate on the "propertyvalue" field.
func PropertyvalueHasPrefix(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldHasPrefix(FieldPropertyvalue, v))
}

// PropertyvalueHasSuffix applies the HasSuffix predicate on the "propertyvalue" field.
func PropertyvalueHasSuffix(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldHasSuffix(FieldPropertyvalue, v))
}

// PropertyvalueIsNil applies the IsNil predicate on the "propertyvalue" field.
func PropertyvalueIsNil() predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldIsNull(FieldPropertyvalue))
}

// PropertyvalueNotNil applies the NotNil predicate on the "propertyvalue" field.
func PropertyvalueNotNil() predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldNotNull(FieldPropertyvalue))
}

// PropertyvalueEqualFold applies the EqualFold predicate on the "propertyvalue" field.
func PropertyvalueEqualFold(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldEqualFold(FieldPropertyvalue, v))
}

// PropertyvalueContainsFold applies the ContainsFold predicate on the "propertyvalue" field.
func PropertyvalueContainsFold(v string) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.FieldContainsFold(FieldPropertyvalue, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ConfigProperty) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ConfigProperty) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ConfigProperty) predicate.ConfigProperty {
	return predicate.ConfigProperty(sql.NotPredicates(p))
}
